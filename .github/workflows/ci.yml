name: ci

on:
  pull_request:
  push:
    branches:
      - main

defaults:
  run:
    shell: bash

jobs:

# check consistency between Groovy and C++ APIs
  groovy_vs_cpp:
    runs-on: [ ubuntu-latest ]
    strategy:
      fail-fast: true
      matrix:
        pass: [ pass1 ]
        include:
          - { pass: pass1, dataset: rga_fa18_inbending  }
          - { pass: pass1, dataset: rga_fa18_outbending }
          - { pass: pass1, dataset: rga_sp19            }
          - { pass: pass1, dataset: rgb_fa19            }
          - { pass: pass1, dataset: rgb_sp19            }
          - { pass: pass1, dataset: rgb_wi20            }
          - { pass: pass1, dataset: rgk_fa18_6.5GeV     }
          - { pass: pass1, dataset: rgk_fa18_7.5GeV     }
    steps:
      - name: checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: setup_groovy
        uses: wtfjoke/setup-groovy@v1
        with:
          groovy-version: 4.x
      - name: env
        run: |
          source environ.sh
          echo "QADB=${QADB}" >> $GITHUB_ENV
          echo "JYPATH=${JYPATH}" >> $GITHUB_ENV
      - name: compile_cpp_tests
        run: |
          cd srcC/tests
          make
      - name: test_diff_groovy_cpp
        run: |
          tests/test_diffGroovyCpp.loop.sh ${{matrix.pass}}/${{matrix.dataset}}
      - name: concatenate_artifacts
        run: |
          mkdir -p artifacts
          cat tmp/cpp*.out > artifacts/cpp.${{matrix.pass}}.${{matrix.dataset}}.txt
          cat tmp/groovy*.out > artifacts/groovy.${{matrix.pass}}.${{matrix.dataset}}.txt
      - name: upload_artifacts
        uses: actions/upload-artifact@v3
        with:
          name: groovy_vs_cpp--${{matrix.pass}}--${{matrix.dataset}}
          retention-days: 1
          path: artifacts/*

# collect artifacts
  collect:
    if: ${{always()}}
    needs: 
      - groovy_vs_cpp
    runs-on: [ ubuntu-latest ]
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: download
        uses: actions/download-artifact@v3
        with:
          path: artifacts_all
      - name: tree_artifacts_all
        run: tree artifacts_all
      - name: organize
        run: |
          mkdir -p artifacts
          mv -v artifacts_all/groovy_vs_cpp*/*.txt artifacts/
      - name: tree_artifacts_final
        run: tree artifacts
      - name: upload
        uses: actions/upload-artifact@v3
        with:
          retention-days: 14
          name: _artifacts
          path: artifacts
